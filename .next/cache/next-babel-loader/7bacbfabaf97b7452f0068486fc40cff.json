{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/greg/nextjs/nextjs-portfolio/pages/_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document from 'next/document';\nimport { SheetsRegistry, JssProvider, createGenerateId } from 'react-jss';\nexport default class JssDocument extends Document {\n  static async getInitialProps(ctx) {\n    const registry = new SheetsRegistry();\n    const generateId = createGenerateId();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () => originalRenderPage({\n      enhanceApp: App => props => /*#__PURE__*/_jsxDEV(JssProvider, {\n        registry: registry,\n        generateId: generateId,\n        children: /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    });\n\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread(_objectSpread({}, initialProps), {}, {\n      styles: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [initialProps.styles, /*#__PURE__*/_jsxDEV(\"style\", {\n          id: \"server-side-styles\",\n          children: registry.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/greg/nextjs/nextjs-portfolio/pages/_document.js"],"names":["Document","SheetsRegistry","JssProvider","createGenerateId","JssDocument","getInitialProps","ctx","registry","generateId","originalRenderPage","renderPage","enhanceApp","App","props","initialProps","styles","toString"],"mappings":";;;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,gBAAtC,QAA8D,WAA9D;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,QAA1B,CAAmC;AAChD,eAAaK,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,QAAQ,GAAG,IAAIN,cAAJ,EAAjB;AACA,UAAMO,UAAU,GAAGL,gBAAgB,EAAnC;AACA,UAAMM,kBAAkB,GAAGH,GAAG,CAACI,UAA/B;;AACAJ,IAAAA,GAAG,CAACI,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,MAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,iBACnB,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEN,QAAvB;AAAiC,QAAA,UAAU,EAAEC,UAA7C;AAAA,+BACE,QAAC,GAAD,oBAASK,KAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFe,KAAD,CADpB;;AASA,UAAMC,YAAY,GAAG,MAAMd,QAAQ,CAACK,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2CACKQ,YADL;AAEEC,MAAAA,MAAM,eACJ;AAAA,mBACGD,YAAY,CAACC,MADhB,eAEE;AAAO,UAAA,EAAE,EAAC,oBAAV;AAAA,oBAAgCR,QAAQ,CAACS,QAAT;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAHJ;AASD;;AAzB+C","sourcesContent":["import Document from 'next/document'\nimport { SheetsRegistry, JssProvider, createGenerateId } from 'react-jss'\n\nexport default class JssDocument extends Document {\n  static async getInitialProps(ctx) {\n    const registry = new SheetsRegistry()\n    const generateId = createGenerateId()\n    const originalRenderPage = ctx.renderPage\n    ctx.renderPage = () =>\n      originalRenderPage({\n        enhanceApp: (App) => (props) => (\n          <JssProvider registry={registry} generateId={generateId}>\n            <App {...props} />\n          </JssProvider>\n        ),\n      })\n\n    const initialProps = await Document.getInitialProps(ctx)\n\n    return {\n      ...initialProps,\n      styles: (\n        <>\n          {initialProps.styles}\n          <style id=\"server-side-styles\">{registry.toString()}</style>\n        </>\n      ),\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}